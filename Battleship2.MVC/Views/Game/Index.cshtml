@model Battleship2.MVC.Models.ViewModels.GameViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h3 id="opponentsname">Your opponent's Name: </h3>
<h3 id="opponentsname">Your game's Id: @Model.Guid</h3>
<table cellpadding="10" r>
    <tr>
        <td class="maptable">
            <h3>Your map</h3>
            <table cellpadding="1">
                @for (int i = 1; i <= 10; i++)
                {
                    <tr>
                        @for (int j = 1; j <= 10; j++)
                        {
                            <td class="noship" id=@(i.ToString()+j.ToString()) name="shipcell"></td>
                        }
                    </tr>
                }
            </table>
        </td>
        <td class="maptable">
            <h3>Your opponent's map</h3>
            <table cellpadding="1">
                @for (int i = 1; i <= 10; i++)
                {
                    <tr>
                        @for (int j = 1; j <= 10; j++)
                        {
                            <td class="hiddencell" id='o@(i.ToString()+j.ToString())' name="opshipcell"></td>
                        }
                    </tr>
                }
            </table>
        </td>
        <td class="shotlist">
            <ul class="list-group">
                <li class="list-group-item list-group-item-primary">Game actions are displayed here</li>
            </ul>
        </td>
    </tr>
    <tr id="availableships">
        @for (int i = 1; i <= 4; i++)
        {
            for (int j = i; j <= 4; j++)
            {
                <td data-shiptype=@j.ToString() class="shipexamplecell">
                    <div class="shipexample">
                        @for (int l = 0; l < j; l++)
                        {
                            <div class="ship"></div>
                        }
                    </div>
                </td>
            }
        }
    </tr>
</table>
<button type="button" class="btn btn-primary btn-lg" id="readybutton">Ready</button>
<div class="popup-box" id="popup-box-1">
    <div class="close">X</div>
    <div class="top">
        <h2>Some Title Goes Here:</h2>
    </div>
    <div class="bottom">
        Some more content, for when you want to add a little bit more
    </div>
</div>

<script>
    let shipshead = null;
    let shipAdditionLocked = new Boolean(false);
    let shootingLocked = new Boolean(true);
    let availships = [[1, 4], [2, 3], [3, 2], [4, 1]];
    let youareactiveplayer = new Boolean(false);

    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/gamehub"
            .build());
    $("td[name=shipcell]").hover(
        function () {
            if (!shipAdditionLocked) {
                if (shipshead != null) {
                    $(this).addClass('shipover')
                }
            }
        },
        function () {
            if (!shipAdditionLocked) {
                if (shipshead != null) {
                    $(this).removeClass('shipover')
                }
            }
        }
    );
    $("td[name=shipcell]").on("click",
        function () {
            if (!shipAdditionLocked) {
                if (shipshead == null) {
                    shipshead = $(this);
                }
                else {
                    var headx, heady, targetx, targety;
                    headx = parseInt(shipshead.attr('id').charAt(0));
                    heady = parseInt(shipshead.attr('id').charAt(1));
                    targetx = parseInt($(this).attr('id').charAt(0));
                    targety = parseInt($(this).attr('id').charAt(1));
                    var length;
                    if ((length = Math.abs(headx - targetx) < 4 && heady == targety) || (length = Math.abs(heady - targety) < 4 && headx == targetx)) {
                        var shipavailable = new Boolean(false);
                        length++;
                        availships.forEach(availshipsoftype => {
                            if (availshipsoftype[0] == decknumber && availshipsoftype[1] != 0) {
                                availshipsoftype[1]--;
                                $('first:td[data-shiptype=' + length.toString() + ']').remove();
                                shipavailable = true;
                                break;
                            }
                        })
                        if (shipavailable) {
                            hubConnection.invoke("AddShip", [headx, heady, targetx, targety, length]);
                        }
                        else {
                            alert("Sorry, no ships remained of that type")
                        }
                    }
                    else {
                        alert("You can't create ship here")
                    }
                }
            }
        }
    );
    hubConnection.on("AddShip", function (shipsection) {
        shipsection.forEach(element => {
            var cellid = element[0].toString() + element[1].toString()
            $('#' + cellid).addClass('ship')
        })
    });
    $('#readybutton').on("click", function () {
        var noshipsremained = new Boolean(true);
        availships.forEach(availshipsoftype => {
            if (availshipsoftype[1] != 0) {
                noshipsremained = true;
            }
        });
        if (noshipsremained) {
            hubConnection.invoke("Ready");
        }
        else {
            alert("You still have unplaced ships!")
        }
    })
    $('#td[name=opshipcell]').on("click", function () {
        if (youareactiveplayer) {
            headx = parseInt(shipshead.attr('id').charAt(1));
            heady = parseInt(shipshead.attr('id').charAt(2));
            youareactiveplayer = false;
            hubConnection.invoke("ShotAt", headX, headY);
        }
    })
    hubConnection.on("GameStarts")
    {
        shootingLocked = false;
        $('#availableships').hide();
    }
    hubConnection.on("OpponentConnected", opponentsname)
    {
        
        alert("Your opponent is connected")
        $('#opponentsname').text("Your opponent's Name: " + opponentsname);
    }
    hubConnection.on("YourFieldShooted", shootedcoords, shotdata)
    {
        $('shotlist').append('<li class="list-group-item list-group-item-primary"' + shotdata + '</li>')
        var headXstring = shootedcoords[0].toString();
        var headYstring = shootedcoords[1].toString();
        $('#' + headXstring + headYstring).append('<div class="hittedfield"></div>')
    }
    hubConnection.on("YourShootResult", shootedJsonData, shotdata)
    {
        $('shotlist').append('<li class="list-group-item list-group-item-primary"' + shotdata + '</li>')
        var shootedData = JSON.stringify(eval("(" + shootedJsonData + ")"));
        shootedData.forEach(shootedCoordsAndShip => {

            $('#' + shootedCoordsAndShip[0].toString() + shootedCoordsAndShip[1].toString()).append('<div class="hittedfield"></div>')
            $('#' + shootedCoordsAndShip[0].toString() + shootedCoordsAndShip[1].toString()).removeClass("hiddencell")
            if (shootedCoordsAndShip[2]) {
                $('#' + shootedCoordsAndShip[0].toString() + shootedCoordsAndShip[1].toString()).addClass("opponentship")
            }
            else {
                ('#' + shootedCoordsAndShip[0].toString() + shootedCoordsAndShip[1].toString()).addClass("noship")
            }
        })
        }
    hubConnection.on("YourTurn")
    {
        youareactiveplayer = true;
    }
    hubConnection.on("GameEnded", youarewinner)
    {
        if (youarewinner) {
            confirm("Youve Won!");
        }
        else
        {
            confirm("Youve Lost");
        }
        $.get("Game/Win");

    }

    hubConnection.start();

</script>



<h1>Index</h1>

